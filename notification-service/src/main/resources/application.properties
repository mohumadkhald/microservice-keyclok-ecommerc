eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka
spring.application.name=notification-service
server.port=0

management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1

# Kafka Properties
spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.template.default-topic=notificationTopic
#spring.kafka.consumer.group-id= notificationId
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.type.mapping=event:org.springframework.samples.notificationservice.event.OrderPlacedEvent
#
## Actuator Prometheus Endpoint
#management.endpoints.web.exposure.include= prometheus
#logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]


# Kafka Topic from which NotificationService will consume
spring.kafka.topic.order=order-topic

# Consumer group ID for NotificationService
spring.kafka.consumer.group-id=notification-group

# Consumer configuration
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# (Optional) Consumer settings like auto-offset reset, enable auto-commit
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=1000



management.endpoints.web.exposure.include=prometheus
